{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniquePrefix": {
      "type": "string",
      "defaultValue": "noaa"
    },
    "numberOfSAs": {
      "type": "int",
      "defaultValue": 1
    },
    "instanceCountPerSA": {
      "type": "int",
      "defaultValue": 2
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "allowedValues": [
        "Standard_A1",
        "Standard_DS4_v2",
        "Standard_D14_v2",
        "Standard_D15_v2"
      ],
      "metadata": {
        "description": "Size of the VMs to be used for actual computation."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "NOAA-NESDIS-SIGP"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "VNET-nesdis-sigp"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-Trusted1"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azure-user"
    },
    "authenticationType": {
       "type": "string",
       "defaultValue": "sshPublicKey",
       "allowedValues": [
           "password",
           "sshPublicKey"
       ],
       "metadata": {
           "description": "Authentication type for the virtual machines"
       }
    },
    "adminPassword": {
      "type": "securestring"
    },
    "sshPublicKey": {
       "type": "string",
       "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCdxNucB4Oju2RhmJnM6t8CT9hn0J/qb5wJes0nagoHGKNVA3mAbL6RhlhloJ1VIWPdiaVYHkqBQu9V92EFhl7E10wfxhxF8fkGPo7q+7MDcvs6XGCRGWibuf8Wumj81qnToNOj/OTEXSJn3I0QVhai/M8MjuiUZfdWrso1IJb1goSPLiZKaxAYqH/2eB6oOjPukJI3HkhAoiULm8pcpPzcVztIFWpj/6amqpb+/wmdMBKJFffqncAAL7rVoMmXhxQdtxXKx7R0uDsSD/EzN9/Z9BAvRMIwDWh2qvksVZ+i6TYDBL9msXqLGlIkMfBPJU2RjbLzZYDcr1c2+wrpG9UF imported-openssh-key",
       "metadata": {
           "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
       }
    },
    "masterHostName": {
      "type": "string",
      "defaultValue": "sigpmaster"
    },
    "hpcUserName": {
      "type": "string",
      "defaultValue": "hpc"
    }
  },
  "variables": {
    "templateLocation": "https://github.com/grandparoach/NewCluster/blob/NOAA/",
    "baseTemplateUri": "[concat(variables('templateLocation'), 'basedeployment.json')]",
    "ImagePublisher": "OpenLogic",
    "ImageOffer": "CentOS",
    "ImageSKU": "7.4",
    "location": "[resourceGroup().location]",
    "finaldeployScriptURI": "https://raw.githubusercontent.com/zhifaliu/NESDIS_IAAS/master/finaldeploy.sh"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('uniquePrefix'), padLeft(copyindex(), 2, '0'), 'sa')]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "storageLoop",
        "count": "[parameters('numberOfSAs')]"
      },
      "location": "[variables('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[concat('clusterSet', copyindex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "deploymentLoop",
        "count": "[parameters('numberOfSAs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('uniquePrefix'), padLeft(copyindex(), 2, '0'), 'sa')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('baseTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "uniquePrefix": { "value": "[parameters('uniquePrefix')]" },
          "clusterName": { "value": "[concat(parameters('uniquePrefix'), padLeft(copyindex(), 2, '0'))]" },
          "ImagePublisher": { "value": "[variables('ImagePublisher')]" }, 
          "ImageOffer": { "value": "[variables('ImageOffer')]" }, 
          "ImageSKU": { "value": "[variables('ImageSKU')]" }, 
          "baseVHDURI": { "value": "[concat('https://', parameters('uniquePrefix'), padLeft(copyindex(), 2, '0'), 'sa.blob.core.windows.net/vhds/')]" },
          "instanceCountPerSA": { "value": "[parameters('instanceCountPerSA')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "vnetName": { "value": "[parameters('vnetName')]" },
          "vnetResourceGroup": { "value": "[parameters('vnetResourceGroup')]" },
          "subnetName": { "value": "[parameters('subnetName')]" },
          "location": { "value": "[variables('location')]" },
          "masterHostName": { "value": "[parameters('masterHostName')]" },
          "hpcUserName": { "value": "[parameters('hpcUserName')]" },
          "finaldeployScriptURI": { "value": "[variables('finaldeployScriptURI')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "sshPublicKey": { "value": "[parameters('sshPublicKey')]"},
          "authenticationType": { "value": "[parameters('authenticationType')]"}
        }
      }
    }
  ]
}

